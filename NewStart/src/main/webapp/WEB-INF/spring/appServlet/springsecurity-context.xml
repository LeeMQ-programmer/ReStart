<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="com.start.pro"/>
	
	<mvc:annotation-driven/>
	
	<security:http auto-config="true" use-expressions="true">
	
		<security:access-denied-handler error-page="/access_denied_page.do"/>
		
		
		<security:intercept-url pattern="/main.do"
			access="permitAll" />

		<security:intercept-url pattern="/resources/**"
			access="permitAll" />

		<security:intercept-url pattern="/admin/**"
			access="hasRole('User')" />

		<security:intercept-url pattern="/**"
			access="permitAll" />
		

		<security:form-login
			login-processing-url="/logingo.do"
			 login-page="/loginForm.do"
			authentication-failure-handler-ref="loginFailureHandler"
			authentication-success-handler-ref="loginSuccessHandler"	
			 username-parameter="username"
			password-parameter="password"
			always-use-default-target='true'/>

		<!-- 로그아웃되면 세션 초기화 해준다 -->
		<security:logout invalidate-session="true"
			logout-url="/logout.do" logout-success-url="/main.do?logout"
			delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
		<!-- 4주 -->
		<security:remember-me key="nobrand" token-validity-seconds="2419200"
		remember-me-parameter="remember_me"/>

		<security:csrf disabled="true"/>
	
	<security:session-management invalid-session-url="/main.do" session-fixation-protection="changeSessionId">
		<security:concurrency-control max-sessions="1" expired-url="/main.do"/>
	</security:session-management>
	
	</security:http>


	<!-- UserDetailsService 핸들러 -->
	<bean id="memberService" class="com.start.pro.security.Sc_UserDetailsService" />

	<!-- User 핸들러 -->
	<bean id="details" class="com.start.pro.security.Sc_User"/>
	
	<!-- AuthenticationProvider 핸들러-->
	<bean id="customProvider" class="com.start.pro.security.Sc_AuthenticationProvider"/>
	
	

	<!-- 비밀번호 암호화 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- 로그인 성공 핸들러 -->
	<bean id="loginSuccessHandler" class="com.start.pro.security.Sc_LoginSuccessHandler">
		<property name="loginidname" value="username"/>
		<property name="defaultUrl" value="/result.do"/>
	</bean> 
	
	<!-- 로그인 실패 핸들러 -->
	<bean id="loginFailureHandler" class="com.start.pro.security.Sc_LoginFailureHandler">
		<property name="loginidname" value="username"/>
    	<property name="loginpwdname" value="password"/>
		<property name="errormsgname" value="ERRORMSG"/>
    	<property name="defaultFailureUrl" value="/main.do?error"/>
	</bean>

	<!-- 오류 메세지 핸들링 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/message/security_message</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="cacheSeconds" value="10"/>
	</bean>	
	
	<bean class="org.springframework.context.support.MessageSourceAccessor">
		<constructor-arg ref="messageSource"/>
	</bean>
	
	<bean class="com.start.pro.util.Util_Message" id="messageUtils"/>
	
	
	
	
	
	<security:authentication-manager>
		 <security:authentication-provider ref="customProvider"/>
		 <security:authentication-provider user-service-ref="memberService"/>
	</security:authentication-manager>
	
	
	
	
	
	
</beans>
